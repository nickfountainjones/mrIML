% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mrPerformancePlot.R
\name{mrPerformancePlot}
\alias{mrPerformancePlot}
\title{Plot Model Performance Comparison}
\usage{
mrPerformancePlot(
  ModelPerf1 = NULL,
  ModelPerf2 = NULL,
  mode = "classification"
)
}
\arguments{
\item{ModelPerf1, ModelPerf2}{A data frame of model performance metrics to
compare. The dataframe is created by \link{mrIMLperformance}, see \strong{Examples}.}

\item{mode}{A character string describing the mode of the models. Should be
either "regression" or "classification". The default is "classification".}
}
\value{
A list containing:
\itemize{
\item \verb{$performance_plot}: A ggplot object for the boxplot of model performance
metrics.
\item \verb{$performance_diff_plot}: A ggplot object for the barplot of differences in
performance metrics.
\item \verb{$performance_diff_df}: A dataframe with the wide format of model
performance metrics and their differences.
}
}
\description{
Create visualizations to compare the performance of two models based on their
performance metrics generated by \link{mrIMLperformance}.
}
\examples{
library(tidymodels)

data <- MRFcov::Bird.parasites
Y <- data \%>\%
  select(-scale.prop.zos) \%>\%
  select(order(everything()))
X <- data \%>\%
  select(scale.prop.zos)

# Specify a random forest tidy model
model_rf <- rand_forest(
  trees = 100, # 100 trees are set for brevity. Aim to start with 1000
  mode = "classification",
  mtry = tune(),
  min_n = tune()
) \%>\%
  set_engine("randomForest")
model_lm <- logistic_reg()

MR_perf_rf <- mrIMLpredicts(
  X = X,
  Y = Y,
  Model = model_rf,
  prop = 0.7,
  k = 5
) \%>\%
  mrIMLperformance()
MR_perf_lm <- mrIMLpredicts(
  X = X,
  Y = Y,
  Model = model_lm,
  prop = 0.7,
  k = 5,
  racing = FALSE
) \%>\%
  mrIMLperformance()

perf_comp <- mrPerformancePlot(
  ModelPerf1 = MR_perf_rf,
  ModelPerf2 = MR_perf_lm
)

perf_comp[[1]]
perf_comp[[2]]
perf_comp[[3]]

}
