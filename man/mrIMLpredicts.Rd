% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mrIMLpredicts.R
\name{mrIMLpredicts}
\alias{mrIMLpredicts}
\title{Generates a multi-response predictive model}
\usage{
mrIMLpredicts(
  X,
  X1 = NULL,
  Y,
  Model,
  balance_data = "no",
  dummy = FALSE,
  prop = 0.5,
  tune_grid_size = 10,
  k = 10,
  racing = TRUE
)
}
\arguments{
\item{Y, X, X1}{Data frames containing the response, predictor, and the join
response variables (if fitting GN model) respectively. If \code{X1} is not
provided then a standard multi-response model will be fit to the data (i.e.
the response values will be independent conditional on the predictors). See
\strong{Details} section bellow.}

\item{Model}{Any model from the \pkg{tidymodels} package. See examples.}

\item{balance_data}{A character string.
\itemize{
\item "up": up-samples the data to equal class sizes.
\item "down": down-samples the data to equal class sizes.
\item "no": leaves data as is. "no" is the default value.
}}

\item{dummy}{A logical value indicating if \code{\link[recipes:step_dummy]{recipes::step_dummy()}} should be
included in the data recipe.}

\item{prop}{A numeric value between 0 and 1. Defines the training-testing
data proportion to be used, defaults to \code{prop = 0.5}.}

\item{tune_grid_size}{A numeric value that sets the grid size for
hyperparameter tuning. Larger grid sizes increase computational time. Ignored
if \code{racing = TRUE}.}

\item{k}{A numeric value. Sets the number of folds in the cross-validation.
10-fold CV is the default.}

\item{racing}{A logical value. If \code{TRUE}, \code{mrIML} performs the grid search
using the \code{\link[finetune:tune_race_anova]{finetune::tune_race_anova()}} method. \code{racing = TRUE} is now the
default method of tuning.}
}
\value{
A list object with three slots:
\itemize{
\item \verb{$Model}: The \pkg{tidymodels} object that was fit.
\item \verb{$Data}: A list of the raw data.
\item \verb{$Fits}: A list of the fitted models to each response variable.
}
}
\description{
This function fits separate classification/regression models, specified in
the \pkg{tidymodels} framework, for each response variable in a data set. This is
the core function of \code{mrIML}.
}
\details{
Additional details about two types of model...

The finer details of how things such as \code{balance_data}...
}
\examples{
library(tidymodels)

data <- MRFcov::Bird.parasites

# Define the response variables of interest
Y <- data \%>\%
  select(-scale.prop.zos) \%>\%
  select(order(everything()))

# Define the predictors
X <- data \%>\%
  select(scale.prop.zos)

# Specify a random forest tidy model
model_rf <- rand_forest(
  trees = 100, # 100 trees are set for brevity. Aim to start with 1000
  mode = "classification",
  mtry = tune(),
  min_n = tune()
) \%>\%
  set_engine("randomForest")

model_lm <- logistic_reg()

# Fitting independent multi-response mode -----------------------------------
# Random forest
MR_model_rf <- mrIMLpredicts(
  X = X,
  Y = Y,
  Model = model_rf,
  prop = 0.7,
  k = 5
)

# Linear model
MR_model_lm <- mrIMLpredicts(
  X = X,
  Y = Y,
  Model = model_lm,
  prop = 0.7,
  k = 5,
  racing = FALSE # Currently a bug if racing = TRUE for non-tuneable models!
)

# Fitting a graphical network model -----------------------------------------

# Define the dependent response variables (all in this case)
X1 <- Y

GN_model <- mrIMLpredicts(
  X = X,
  Y = Y,
  X1 = X1,
  Model = model_rf,
  prop = 0.7,
  k = 5
)
}
